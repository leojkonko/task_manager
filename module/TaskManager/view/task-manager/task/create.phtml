<?php
$title = 'New Task';
$this->headTitle($title);
?>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="mb-0"><?= $this->escapeHtml($title) ?></h3>
                </div>
                <div class="card-body">
                    <?php
                    // Verificar se hoje é dia útil (segunda a sexta)
                    $today = new DateTime();
                    $dayOfWeek = (int)$today->format('N'); // 1 = segunda, 7 = domingo
                    $isWeekend = $dayOfWeek >= 6; // 6 = sábado, 7 = domingo
                    $dayNames = [
                        1 => 'Monday',
                        2 => 'Tuesday',
                        3 => 'Wednesday',
                        4 => 'Thursday',
                        5 => 'Friday',
                        6 => 'Saturday',
                        7 => 'Sunday'
                    ];
                    ?>

                    <!-- Aviso sobre dias úteis -->
                    <?php if ($isWeekend): ?>
                        <!-- Aviso de fim de semana -->
                        <div class="alert alert-warning mb-4 text-center">
                            <h4><i class="fas fa-calendar-times"></i> Weekend Notice</h4>
                            <p class="mb-3">
                                <strong>Today is <?= $dayNames[$dayOfWeek] ?></strong> - Task creation is only available during weekdays (Monday to Friday).
                            </p>

                            <?php
                            // Calcular próximo dia útil
                            $nextWeekday = clone $today;
                            while ((int)$nextWeekday->format('N') >= 6) {
                                $nextWeekday->add(new DateInterval('P1D'));
                            }
                            ?>
                            <p class="text-info mb-3">
                                <i class="fas fa-info-circle"></i>
                                <strong>Next business day:</strong> <?= $dayNames[(int)$nextWeekday->format('N')] ?>, <?= $nextWeekday->format('d/m/Y') ?>
                            </p>
                        </div>

                        <!-- Desabilitar o formulário -->
                        <div class="text-center p-4">
                            <i class="fas fa-business-time fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">Form unavailable on weekends</h4>
                            <p class="text-muted">Come back next Monday to create new tasks!</p>
                            <a href="<?= $this->url('task-manager') ?>" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Task List
                            </a>
                        </div>
                    <?php else: ?>
                        <!-- Aviso de dia útil -->
                        <div class="alert alert-success mb-4">
                            <i class="fas fa-check-circle"></i>
                            <strong>Great!</strong> Today is <?= $dayNames[$dayOfWeek] ?> - You can create tasks normally.
                        </div>

                        <?php
                        $form->setAttribute('action', $this->url('task-manager/create'));
                        $form->setAttribute('data-enhance-feedback', 'true');
                        $form->prepare();
                        echo $this->form()->openTag($form);
                        ?>

                        <!-- Exibir erros de validação -->
                        <?php if ($form->getMessages()): ?>
                            <div class="alert alert-danger">
                                <h6>Please correct the following errors:</h6>
                                <ul class="mb-0">
                                    <?php foreach ($form->getMessages() as $field => $errors): ?>
                                        <?php foreach ($errors as $error): ?>
                                            <li><?= $this->escapeHtml($error) ?></li>
                                        <?php endforeach; ?>
                                    <?php endforeach; ?>
                                </ul>
                            </div>
                        <?php endif; ?>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <?= $this->formLabel($form->get('title')) ?>
                                    <?= $this->formElement($form->get('title')) ?>
                                    <?= $this->formElementErrors($form->get('title')) ?>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <?= $this->formLabel($form->get('description')) ?>
                                    <?= $this->formElement($form->get('description')) ?>
                                    <?= $this->formElementErrors($form->get('description')) ?>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <?= $this->formLabel($form->get('status')) ?>
                                    <?= $this->formElement($form->get('status')) ?>
                                    <?= $this->formElementErrors($form->get('status')) ?>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <?= $this->formLabel($form->get('priority')) ?>
                                    <?= $this->formElement($form->get('priority')) ?>
                                    <?= $this->formElementErrors($form->get('priority')) ?>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <?= $this->formLabel($form->get('due_date')) ?>
                                    <?= $this->formElement($form->get('due_date')) ?>
                                    <?= $this->formElementErrors($form->get('due_date')) ?>
                                    <div class="form-text">Leave blank if there's no specific deadline</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <?= $this->formLabel($form->get('category_id')) ?>
                                    <?= $this->formElement($form->get('category_id')) ?>
                                    <?= $this->formElementErrors($form->get('category_id')) ?>
                                </div>
                            </div>
                        </div>

                        <?= $this->formElement($form->get('csrf')) ?>

                        <div class="d-flex justify-content-between">
                            <a href="<?= $this->url('task-manager') ?>" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back
                            </a>
                            <?= $this->formElement($form->get('submit')) ?>
                        </div>

                        <?= $this->form()->closeTag() ?>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Validação client-side adicional
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('task-form');
        const titleInput = document.getElementById('title');

        form.addEventListener('submit', function(e) {
            let isValid = true;

            // Validar título
            if (titleInput.value.trim().length < 3) {
                isValid = false;
                titleInput.classList.add('is-invalid');
                showFieldError(titleInput, 'O título deve ter pelo menos 3 caracteres');
            } else {
                titleInput.classList.remove('is-invalid');
                hideFieldError(titleInput);
            }

            if (!isValid) {
                e.preventDefault();
            }
        });

        // Remover erro ao digitar
        titleInput.addEventListener('input', function() {
            if (this.value.trim().length >= 3) {
                this.classList.remove('is-invalid');
                hideFieldError(this);
            }
        });
    });

    function showFieldError(field, message) {
        hideFieldError(field);
        const errorDiv = document.createElement('div');
        errorDiv.className = 'invalid-feedback';
        errorDiv.textContent = message;
        field.parentNode.appendChild(errorDiv);
    }

    function hideFieldError(field) {
        const errorDiv = field.parentNode.querySelector('.invalid-feedback');
        if (errorDiv) {
            errorDiv.remove();
        }
    }
</script>