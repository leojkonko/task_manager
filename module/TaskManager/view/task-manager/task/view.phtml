<?php
$title = 'View Task: ' . $task['title'];
$this->headTitle($title);
?>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">Task Details</h3>
                    <div>
                        <span class="badge <?= $this->getStatusBadgeClass($task['status']) ?> me-2">
                            <?= $this->escapeHtml($availableStatuses[$task['status']]) ?>
                        </span>
                        <span class="badge <?= $this->getPriorityBadgeClass($task['priority']) ?>">
                            <?= $this->escapeHtml($availablePriorities[$task['priority']]) ?>
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <h4 class="mb-3"><?= $this->escapeHtml($task['title']) ?></h4>

                    <?php if ($task['description']): ?>
                        <div class="mb-3">
                            <h6>Description:</h6>
                            <p class="text-muted"><?= nl2br($this->escapeHtml($task['description'])) ?></p>
                        </div>
                    <?php endif; ?>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6>Status:</h6>
                                <span class="badge <?= $this->getStatusBadgeClass($task['status']) ?>">
                                    <?= $this->escapeHtml($availableStatuses[$task['status']]) ?>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6>Priority:</h6>
                                <span class="badge <?= $this->getPriorityBadgeClass($task['priority']) ?>">
                                    <?= $this->escapeHtml($availablePriorities[$task['priority']]) ?>
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6>Created:</h6>
                                <p class="text-muted">
                                    <i class="fas fa-calendar-plus"></i>
                                    <?= date('d/m/Y H:i', strtotime($task['created_at'])) ?>
                                </p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6>Last Updated:</h6>
                                <p class="text-muted">
                                    <i class="fas fa-edit"></i>
                                    <?= date('d/m/Y H:i', strtotime($task['updated_at'])) ?>
                                </p>
                            </div>
                        </div>
                    </div>

                    <?php if ($task['due_date']): ?>
                        <div class="mb-3">
                            <h6>Due Date:</h6>
                            <p class="text-muted <?= $task['is_overdue'] ? 'text-danger' : '' ?>">
                                <i class="fas fa-calendar"></i>
                                <?= date('d/m/Y H:i', strtotime($task['due_date'])) ?>
                                <?php if ($task['is_overdue']): ?>
                                    <span class="badge bg-danger ms-2">Overdue</span>
                                <?php endif; ?>
                            </p>
                        </div>
                    <?php endif; ?>

                    <?php if ($task['completed_at']): ?>
                        <div class="mb-3">
                            <h6>Completion Date:</h6>
                            <p class="text-success">
                                <i class="fas fa-check-circle"></i>
                                <?= date('d/m/Y H:i', strtotime($task['completed_at'])) ?>
                            </p>
                        </div>
                    <?php endif; ?>
                </div>
                <div class="card-footer">
                    <!-- Avisos sobre restrições da tarefa -->
                    <?php
                    $hasRestrictions = false;
                    $restrictions = [];

                    if ($task['status'] !== 'pending') {
                        $hasRestrictions = true;
                        $restrictions[] = 'Task cannot be edited or deleted (status: ' . $availableStatuses[$task['status']] . ')';
                    }

                    if ($task['status'] === 'pending') {
                        $createdAt = new DateTime($task['created_at']);
                        $now = new DateTime();
                        $daysSinceCreation = $now->diff($createdAt)->days;
                        if ($daysSinceCreation < 5) {
                            $hasRestrictions = true;
                            $remainingDays = 5 - $daysSinceCreation;
                            $restrictions[] = "Deletion will be available in {$remainingDays} day(s)";
                        }
                    }
                    ?>

                    <?php if ($hasRestrictions): ?>
                        <div class="alert alert-warning alert-sm py-2 mb-3" style="font-size: 0.9em;">
                            <i class="fas fa-info-circle"></i>
                            <strong>Restrictions:</strong><br>
                            <?php foreach ($restrictions as $restriction): ?>
                                • <?= $this->escapeHtml($restriction) ?><br>
                            <?php endforeach; ?>
                        </div>
                    <?php endif; ?>

                    <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                        <div class="btn-group" role="group">
                            <a href="<?= $this->url('task-manager') ?>" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Tasks
                            </a>

                            <?php if ($task['status'] === 'pending'): ?>
                                <a href="<?= $this->url('task-manager/edit', ['id' => $task['id']]) ?>"
                                    class="btn btn-outline-primary">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                            <?php else: ?>
                                <button type="button" class="btn btn-outline-primary disabled position-relative"
                                    title="Only pending tasks can be edited"
                                    data-bs-toggle="tooltip" data-bs-placement="top">
                                    <i class="fas fa-edit"></i> Edit
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning text-dark">
                                        <i class="fas fa-lock" style="font-size: 0.7em;"></i>
                                    </span>
                                </button>
                            <?php endif; ?>

                            <?php if (!$task['is_completed']): ?>
                                <button type="button" class="btn btn-success me-2"
                                    onclick="completeTask(<?= $task['id'] ?>)">
                                    <i class="fas fa-check"></i> Mark as Completed
                                </button>
                            <?php endif; ?>

                            <button type="button" class="btn btn-info me-2"
                                onclick="duplicateTask(<?= $task['id'] ?>)">
                                <i class="fas fa-copy"></i> Duplicate
                            </button>

                            <?php
                            // Verificar se pode excluir: status pending + mais de 5 dias
                            $canDelete = $task['status'] === 'pending';
                            if ($canDelete) {
                                $createdAt = new DateTime($task['created_at']);
                                $now = new DateTime();
                                $daysSinceCreation = $now->diff($createdAt)->days;
                                $canDelete = $daysSinceCreation >= 5;
                            }
                            ?>

                            <?php if ($canDelete): ?>
                                <button type="button" class="btn btn-outline-danger"
                                    onclick="deleteTask(<?= $task['id'] ?>)">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            <?php else: ?>
                                <?php
                                if ($task['status'] !== 'pending') {
                                    $tooltip = 'Only pending tasks can be deleted';
                                } else {
                                    $remainingDays = 5 - $daysSinceCreation;
                                    $tooltip = "Deletion will be available in {$remainingDays} day(s). Tasks can only be deleted 5 days after creation.";
                                }
                                ?>
                                <button type="button" class="btn btn-outline-danger disabled position-relative"
                                    title="<?= $this->escapeHtmlAttr($tooltip) ?>"
                                    data-bs-toggle="tooltip" data-bs-placement="top">
                                    <i class="fas fa-trash"></i> Delete
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger text-white">
                                        <i class="fas fa-lock" style="font-size: 0.7em;"></i>
                                    </span>
                                </button>
                            <?php endif; ?>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function completeTask(id) {
        const confirmMessage = '🏆 Mark this task as completed?';

        if (confirm(confirmMessage)) {
            // Mostrar loading toast
            if (typeof showInfoToast === 'function') {
                showInfoToast('⏳ Processing...', 'Please wait');
            }

            fetch(`/tasks/complete/${id}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        if (typeof showSuccessToast === 'function') {
                            showSuccessToast('🏆 Congratulations! Task marked as completed.', 'Success!');
                        }
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        if (typeof showErrorToast === 'function') {
                            showErrorToast(data.message || '😓 Something went wrong.', 'Oops!');
                        } else {
                            alert('Error: ' + data.message);
                        }
                    }
                })
                .catch(error => {
                    if (typeof showErrorToast === 'function') {
                        showErrorToast('😓 Connection error. Please try again.', 'Network Error');
                    } else {
                        alert('Error completing task');
                    }
                });
        }
    }

    function duplicateTask(id) {
        const confirmMessage = '📋 Duplicate this task?';

        if (confirm(confirmMessage)) {
            // Mostrar loading toast
            if (typeof showInfoToast === 'function') {
                showInfoToast('⏳ Duplicating task...', 'Please wait');
            }

            fetch(`/tasks/duplicate/${id}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        if (typeof showSuccessToast === 'function') {
                            showSuccessToast('📋 Task duplicated successfully! A new task was created.', 'Completed!');
                        }
                        setTimeout(() => {
                            window.location.href = '/tasks';
                        }, 1500);
                    } else {
                        if (typeof showErrorToast === 'function') {
                            showErrorToast(data.message || '😓 Something went wrong.', 'Oops!');
                        } else {
                            alert('Error: ' + data.message);
                        }
                    }
                })
                .catch(error => {
                    if (typeof showErrorToast === 'function') {
                        showErrorToast('😓 Connection error. Please try again.', 'Network Error');
                    } else {
                        alert('Error duplicating task');
                    }
                });
        }
    }

    function deleteTask(id) {
        if (confirm('Are you sure you want to delete this task? This action cannot be undone.')) {
            fetch(`/tasks/delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        if (typeof showSuccessToast === 'function') {
                            showSuccessToast('🗑️ Task deleted successfully!', 'Completed!');
                        }
                        setTimeout(() => {
                            window.location.href = '/tasks';
                        }, 1500);
                    } else {
                        if (typeof showErrorToast === 'function') {
                            showErrorToast(data.message || '😓 Something went wrong.', 'Oops!');
                        } else {
                            alert('Error: ' + data.message);
                        }
                    }
                })
                .catch(error => {
                    if (typeof showErrorToast === 'function') {
                        showErrorToast('😓 Connection error. Please try again.', 'Network Error');
                    } else {
                        alert('Error deleting task');
                    }
                });
        }
    }
</script>

<!-- Script para inicializar tooltips do Bootstrap -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                delay: {
                    "show": 500,
                    "hide": 100
                },
                placement: 'auto'
            });
        });
    });
</script>